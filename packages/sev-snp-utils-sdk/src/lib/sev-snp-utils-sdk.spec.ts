// @ts-nocheck
import { TextEncoder, TextDecoder } from 'util';
import * as fetch from 'node-fetch';

global.TextEncoder = TextEncoder;
// @ts-ignore
global.TextDecoder = TextDecoder;

import * as sevSnpUtilsSdk from './sev-snp-utils-sdk';
import { uint8arrayFromString } from '../../../uint8arrays/src/lib/uint8arrays';

// a valid vcek url returned by the get_vcek_url function run on the VALID_REPORT below
const VALID_REPORT_VCEK_URL =
  'https://kdsintf.amd.com/vcek/v1/Milan/6384317d961c170e37b493895653a9ea7fadb899794b413eae2d4fe4f8f170891f979820e37578baedb71c8679b0ac725cea761b97807d9fede63b3dfa9a20e0?blSPL=03&teeSPL=00&snpSPL=10&ucodeSPL=169';

// valid base64 encoded report as returned exactly from a real lit node
const VALID_REPORT =
  'AgAAAAAAAAAAAAMAAAAAAAEAAAAFEAABCww+QjfkrnP8XJJQzMFZ5KA9OPtN8HpTAAAAAAEAAAADAAAAAAAKqQEAAAAAAAAAAQAAAAAAAACtnG/cVyWwTYPm26R0StDqZG8pO20IwmzlAOlOPFrevbTUKGlF096VecBuJzBYu3+j8DP+PrppDO9aDgUhu4o2nxH3TXrAyp+IxMryMKafr4oL0RTwPygPDs4VYXe9v1lp+2dLqjKvxMgYQZyTM45qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg3s0rdraTT4G3+lfvAXbdpgNomRM23eHQkIZYnCpEUaGZlenCRDKho4tPZo3jGV+XjJBod/B1xoIpaTLa2FBVVwDfvBgAbHIF2WNzx44vPov0Ge7QmwCD7hpipXQeqwYJeYwiktDMRZLZHYRao2Ic8DYjPVccXKIcpLO/gs9dmf//////////////////////////////////////////AwAAAAAACqkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjhDF9lhwXDje0k4lWU6nqf624mXlLQT6uLU/k+PFwiR+XmCDjdXi67bcchnmwrHJc6nYbl4B9n+3mOz36miDgAwAAAAAACqkBNgEAATYBAAMAAAAAAAqpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3lgvO0mD4gUl1bRGV9BtvMXWdek6dWCr3fRLwRg61VVfsT1Q3YkVUQ6Sm/D+uoHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/HVoaftxkxc3KR7+Fif5gMZjOmyn4QknIb7kukr1XHk6CqKSdiMX6ErO5Gcc+rq

// base64 encoded report from the resources/test/guest_report_corrupt.bin file
const CORRUPT_REPORT =
  'AgAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAGcwEAAAAAAAAAAAAAAAAAAADhwRL/kI/rw7mLFpOmzTVk6vjl5spinQhNnw66mSR8rN1y42n/iUE5fCgHQJ/2a+ZL6QjaF617ikmiomwOgIaqdllSiWG8aJpD9b4U7QY/4cJgWOWk8Lu/05RKoVAyQExa+3MfeCbJoAfyrWPIE7BMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRwSc5EOObgoZmF2evpJfdAkZcyOCnCCwEz1dhaUB+bv//////////////////////////////////////////AgAAAAAABXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeEjXM5vPlB7ZqnT8hmaMlzQvhfGxQ/VXChM7/mT2/bH4y+hanZSG/a3jMnKSC5XK95w6Mnxvfy4Jn3qjhH/d+AgAAAAAABXMDMwEABjEBAAIAAAAAAAVzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArYItTixkrt6P7MQFfwdUwTFqZNXG6aq83w0giJ+0KjvORDtWHoIP69GVGbs+CRuNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs3rIl8EfCW4ojML3Ktt99Tx53P2R0eHV45e11MYaxdHiI1ysmxq76QOY1fco8uSCg==';

// base64 encoded report from the resources/test/guest_report_bad_sig.bin file
const BAD_SIG_REPORT =
  'AgAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAGcwEAAAAAAAAAAAAAAAAAAADhwRL/kI/rw7mLFpOmzTVk6vjl5spinQhNnw66mSR8rN1y42n/iUE5fCgHQJ/2a+ZL6QjaF617ikmiomwOgIaqdllSiWG8aJpD9b4U7QY/4cJgWOWk8Lu/05RKoVAyQExa+3MfeCbJoAfyrWPIE7BMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRwSc5EOObgoZmF2evpJfdAkZcyOCnCCwEz1dvaUB+bv//////////////////////////////////////////AgAAAAAABXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeEjXM5vPlB7ZqnT8hmaMlzQvhfGxQ/VXChM7/mT2/bH4y+hanZSG/a3jMnKSC5XK95w6Mnxvfy4Jn3qjhH/d+AgAAAAAABXMDMwEABjEBAAIAAAAAAAVzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArYItTixkrt6P7MQFfwdUwTFqZNXG6aq83w0giJ+0KjvORDtWHoIP69GVGbs+CRuNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs3rIl8EfCW4ojML3Ktt99Tx53P2R0eHV45e11MYaxdHiI1ysmxq76QOY1fco8u

describe('imported functions', () => {
  it('should be non-zero', () => {
    const OUTPUT = Object.keys(sevSnpUtilsSdk).length;

    expect(OUTPUT).toBeGreaterThan(0);
  });
});

describe('sevSnpUtilsSdk', () => {
  let cert: Uint8Array;
  beforeAll(async () => {
    await sevSnpUtilsSdk.initWasmSevSnpUtilsSdk();
    const certData = await fetch(VALID_REPORT_VCEK_URL);
    cert = new Uint8Array(await certData.arrayBuffer());
  });

  it('should verify an attestation report', async () => {
    let verified = false;
    try {
      await sevSnpUtilsSdk.verify_attestation_report(VALID_REPORT, cert);
      verified = true;
    } catch (e) {
      console.error(e);
    }

    // assert
    expect(verified).toBe(true);
  });

  it('should fail to verify a corrupt attestation report', async () => {
    let verified = false;
    try {
      await sevSnpUtilsSdk.verify_attestation_report(CORRUPT_REPORT);
      verified = true;
    } catch (e) {
      console.error(e);
    }

    // assert
    expect(verified).toBe(false);
  });

  it('should fail to verify an attestation report with bad sigs', async () => {
    let verified = false;
    try {
      await sevSnpUtilsSdk.verify_attestation_report(BAD_SIG_REPORT);
      verified = true;
    } catch (e) {
      console.error(e);
    }

    // assert
    expect(verified).toBe(false);
  });

  it('should parse an attestation report', () => {
    const result = sevSnpUtilsSdk.parse_attestation_report(VALID_REPORT);

    // assert
    expect(result.version).toBe(2);
  });

  it('should get the correct vcek url for a report', () => {
    const result = sevSnpUtilsSdk.get_vcek_url(VALID_REPORT);

    // assert
    expect(result).toBe(VALID_REPORT_VCEK_URL);
  });
});
