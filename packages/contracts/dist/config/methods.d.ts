export declare const METHODS_TO_EXTRACT: readonly ["PKPPermissions.getPermittedActions", "PKPPermissions.getPermittedAddresses", "PKPPermissions.isPermittedAction", "PKPPermissions.isPermittedAddress", "PKPPermissions.getPermittedAuthMethods", "PKPPermissions.getPermittedAuthMethodScopes", "PKPPermissions.addPermittedAction", "PKPPermissions.addPermittedAddress", "PKPPermissions.addPermittedAuthMethodScope", "PKPPermissions.addPermittedAuthMethod", "PKPPermissions.removePermittedAction", "PKPPermissions.removePermittedAddress", "PKPPermissions.removePermittedAuthMethod", "PKPPermissions.removePermittedAuthMethodScope", "PKPPermissions.getTokenIdsForAuthMethod", "PKPNFT.tokenOfOwnerByIndex", "PKPNFT.mintCost", "PKPNFT.safeTransferFrom", "PKPNFT.mintNext", "PKPNFT.claimAndMint", "PKPHelper.claimAndMintNextAndAddAuthMethodsWithTypes", "PKPHelper.mintNextAndAddAuthMethods", "Staking.getActiveUnkickedValidatorStructsAndCounts", "PriceFeed.getNodesForRequest", "PubkeyRouter.deriveEthAddressFromPubkey", "PubkeyRouter.ethAddressToPkpId", "PubkeyRouter.getPubkey", "PubkeyRouter.getEthAddress", "Ledger.deposit", "Ledger.depositForUser", "Ledger.balance", "Ledger.stableBalance", "Ledger.requestWithdraw", "Ledger.latestWithdrawRequest", "Ledger.userWithdrawDelay", "Ledger.withdraw", "PaymentDelegation.getPayersAndRestrictions", "PaymentDelegation.getUsers", "PaymentDelegation.getRestriction", "PaymentDelegation.getPayers", "PaymentDelegation.delegatePayments", "PaymentDelegation.undelegatePayments", "PaymentDelegation.delegatePaymentsBatch", "PaymentDelegation.undelegatePaymentsBatch", "PaymentDelegation.setRestriction"];
export type ContractName = 'PKPPermissions' | 'PKPNFT' | 'PKPHelper' | 'Staking' | 'PubkeyRouter';
export type ExtractMethodName<T extends string> = T extends `${ContractName}.${infer Method}` ? Method : never;
