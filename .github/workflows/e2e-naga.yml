name: E2E - Naga (matrix)

on:
  push:
    branches: [naga, canary-naga]
  pull_request:

jobs:
  build:
    name: Build once
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rust-std
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          registry-url: https://registry.npmjs.org
      - name: Enable corepack + pin pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.0 --activate
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist
          if-no-files-found: error

  e2e:
    name: E2E (${{ matrix.network }})
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: naga-dev
            network: naga-dev
            privateKey: LIVE_MASTER_ACCOUNT_NAGA_DEV
          - environment: naga-staging
            network: naga-staging
            privateKey: LIVE_MASTER_ACCOUNT_NAGA_STAGING
          - environment: naga-test
            network: naga-test
            privateKey: LIVE_MASTER_ACCOUNT_NAGA_TEST
    env:
      LOCAL_MASTER_ACCOUNT: ${{ secrets.LOCAL_MASTER_ACCOUNT }}
      LOG_LEVEL: debug2
      LIVE_MASTER_ACCOUNT: ${{ secrets[matrix.privateKey] }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          registry-url: https://registry.npmjs.org
      - name: Enable corepack + pin pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.0 --activate
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist
      - name: Run health check (${{ matrix.network }})
        run: NETWORK=${{ matrix.network }} pnpm run test:e2e:ci all
        timeout-minutes: 10
