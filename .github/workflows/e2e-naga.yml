name: E2E - Naga

on:
  push:
    branches:
      - naga
      - canary-naga
  pull_request:

env:
  LOCAL_MASTER_ACCOUNT: ${{ secrets.LOCAL_MASTER_ACCOUNT }}
  LOG_LEVEL: debug2

concurrency:
  group: e2e-naga-${{ github.ref }}
  cancel-in-progress: true

jobs:
  naga-e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Cargo builds
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rust-std

      - name: Cache wasm-pack
        uses: actions/cache@v4
        with:
          path: ~/.cache/.wasm-pack
          key: ${{ runner.os }}-wasm-pack

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.0
          run_install: false

      - name: Configure pnpm store
        run: pnpm config set store-dir ~/.pnpm-store

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Run health check for naga-dev
        env:
          NETWORK: naga-dev
          LIVE_MASTER_ACCOUNT: ${{ secrets.LIVE_MASTER_ACCOUNT_NAGA_DEV }}
        run: pnpm run test:e2e:ci all
        timeout-minutes: 10

      - name: Run health check for naga-staging
        env:
          NETWORK: naga-staging
          LIVE_MASTER_ACCOUNT: ${{ secrets.LIVE_MASTER_ACCOUNT_NAGA_STAGING }}
        run: pnpm run test:e2e:ci all
        timeout-minutes: 10

      - name: Run health check for naga-test
        env:
          NETWORK: naga-test
          LIVE_MASTER_ACCOUNT: ${{ secrets.LIVE_MASTER_ACCOUNT_NAGA_TEST }}
        run: pnpm run test:e2e:ci all
        timeout-minutes: 10
