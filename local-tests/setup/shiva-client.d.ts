// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
type ContractAbis = {
  litToken: string;
  erc20: string;
  backupRecovery: string;
  staking: string;
  pkpnft: string;
  pubkeyRouter: string;
  pkpPermissions: string;
  pkpHelper: string;
  contractResolver: string;
  paymentDelegation: string;
  priceFeed: string;
};

type ContractAddresses = {
  litToken: string;
  backupRecovery: string;
  staking: string;
  pkpnft: string;
  pubkeyRouter: string;
  pkpPermissions: string;
  pkpHelper: string;
  contractResolver: string;
  keyDeriver: string;
  paymentDelegation: string;
  priceFeed: string;
};

type TestNetCreateRequest = {
  nodeCount: number;
  pollingInterval: string;
  epochLength: number;
  customBuildPath: string | null;
  litActionServerCustomBuildPath: string | null;
  existingConfigPath: string | null;
  which: string | null;
  ecdsaRoundTimeout: string | null;
};

type TestNetInfo = {
  contractAddresses: ContractAddresses;
  validatorAddresses: Array<string>;
  contractResolverAbi: string;
  rpcUrl: string;
  epochLength: number;
  contractAbis: ContractAbis;
};

type TestNetResponse<T> = {
  testnetId: string;
  command: string;
  wasCanceled: boolean;
  body: T | null;
  lastStateObserved: string | null;
  messages: Array<string> | null;
  errors: Array<string> | null;
};

type TestNetState = 'Busy' | 'Active' | 'Mutating' | 'Shutdown' | 'UNKNOWN';

export {
  ContractAbis,
  ContractAddresses,
  TestNetCreateRequest,
  TestNetInfo,
  TestNetResponse,
  TestNetState,
};
